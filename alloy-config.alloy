otelcol.auth.basic "grafanacloud" {
  username = env("GRAFANA_TEMPO_USERNAME")
  password = env("GRAFANA_TEMPO_API_KEY")
}

otelcol.exporter.otlp "grafanacloud" {
  client {
    endpoint = "tempo-prod-16-prod-au-southeast-1.grafana.net:443"
    auth     = otelcol.auth.basic.grafanacloud.handler
    tls {
      insecure = false
    }
  }
}

otelcol.processor.batch "default" {
  output {
    traces = [otelcol.exporter.otlp.grafanacloud.input]
  }
}

otelcol.receiver.otlp "otlp_receiver" {
  grpc {
    endpoint = "0.0.0.0:4317"
  }
  http {
    endpoint = "0.0.0.0:4318"
  }
  output {
    traces = [otelcol.processor.batch.default.input]
  }
}

local.file_match "serilog_logs" {
  path_targets = [{
    __path__ = "/var/log/smartretail360/app*.log",
  }]
  sync_period = "5s"
}

loki.source.file "serilog_log_source" {
  targets       = local.file_match.serilog_logs.targets
  forward_to    = [loki.process.serilog_log_processor.receiver]
  tail_from_end = true
}

loki.process "serilog_log_processor" {
  stage.json {
    expressions = {
      level      = "Level",
      msg        = "RenderedMessage",
      timestamp  = "Timestamp",
      trace_id   = "Properties.TraceId",
      span_id    = "Properties.SpanId",
      user_id    = "Properties.UserId",
      tenant_id  = "Properties.TenantId",
      role_id    = "Properties.RoleId",
      module     = "Properties.Module",
      locale     = "Properties.Locale",
      log_category = "Properties.LogCategory",
      email = "Properties.Email",
      action = "Properties.Action",
      account_type = "Properties.AccountType",
      is_success = "Properties.IsSuccess",
      env = "Properties.Env",
    }
  }

  stage.timestamp {
    source = "timestamp"
    format = "2006-01-02T15:04:05.999999999Z07:00"
  }

  stage.labels {
    values = {
      level      = "level",
      module     = "module",
      trace_id   = "trace_id",
      span_id    = "span_id",
      user_id    = "user_id",
      tenant_id  = "tenant_id",
      role_id    = "role_id",
      locale     = "locale",
      log_category = "log_category",
      email      = "email",
      action     = "action",
      account_type = "account_type",
      is_success = "is_success",
      env        = "env",
    }
  }

  stage.static_labels {
    values = {
      job          = "smartretail360",
      service_name = "smartretail360",
      environment  = "dev",
    }
  }

  forward_to = [loki.write.grafanacloud_logs.receiver]
}

loki.write "grafanacloud_logs" {
  endpoint {
    url = "https://logs-prod-026.grafana.net/loki/api/v1/push"
    basic_auth {
      username = env("GRAFANA_LOKI_USERNAME")
      password = env("GRAFANA_LOKI_API_KEY")
    }
  }
}