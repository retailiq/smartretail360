/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/Dev/test-exception": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Dev/test-sentry": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Dev/test-serilog": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/Dev/test-trace": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: never;
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/auth/emails/verify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["EmailVerificationRequest"];
                    "text/json": components["schemas"]["EmailVerificationRequest"];
                    "application/*+json": components["schemas"]["EmailVerificationRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["ObjectApiResponse"];
                        "application/json": components["schemas"]["ObjectApiResponse"];
                        "text/json": components["schemas"]["ObjectApiResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/Notifications/send-email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["EmailNotificationRequest"];
                    "text/json": components["schemas"]["EmailNotificationRequest"];
                    "application/*+json": components["schemas"]["EmailNotificationRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content?: never;
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/tenants": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: {
            parameters: {
                query?: never;
                header?: never;
                path?: never;
                cookie?: never;
            };
            requestBody?: {
                content: {
                    "application/json": components["schemas"]["TenantRegisterRequest"];
                    "text/json": components["schemas"]["TenantRegisterRequest"];
                    "application/*+json": components["schemas"]["TenantRegisterRequest"];
                };
            };
            responses: {
                /** @description OK */
                200: {
                    headers: {
                        [name: string]: unknown;
                    };
                    content: {
                        "text/plain": components["schemas"]["TenantRegisterResponseApiResponse"];
                        "application/json": components["schemas"]["TenantRegisterResponseApiResponse"];
                        "text/json": components["schemas"]["TenantRegisterResponseApiResponse"];
                    };
                };
            };
        };
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * Format: int32
         * @enum {integer}
         */
        AccountType: 1 | 2;
        EmailNotificationRequest: {
            email?: string | null;
            template?: components["schemas"]["EmailTemplate"];
        };
        /**
         * Format: int32
         * @enum {integer}
         */
        EmailTemplate: 1 | 2 | 3 | 4 | 5;
        EmailVerificationRequest: {
            token?: string | null;
            type?: components["schemas"]["AccountType"];
        };
        ErrorInfo: {
            /** Format: int32 */
            code?: number;
            details?: string | null;
        };
        ObjectApiResponse: {
            success?: boolean;
            traceId?: string | null;
            message?: string | null;
            data?: unknown;
            error?: components["schemas"]["ErrorInfo"];
        };
        TenantRegisterRequest: {
            adminEmail?: string | null;
            password?: string | null;
            passwordConfirmation?: string | null;
        };
        TenantRegisterResponse: {
            /** Format: uuid */
            tenantId?: string;
            email?: string | null;
            status?: string | null;
            accessToken?: string | null;
            refreshToken?: string | null;
        };
        TenantRegisterResponseApiResponse: {
            success?: boolean;
            traceId?: string | null;
            message?: string | null;
            data?: components["schemas"]["TenantRegisterResponse"];
            error?: components["schemas"]["ErrorInfo"];
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
